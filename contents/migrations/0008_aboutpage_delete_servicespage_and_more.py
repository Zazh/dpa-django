# Generated by Django 5.2.1 on 2025-08-30 08:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contents', '0007_remove_benefititem_icon_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='Title')),
                ('body', models.TextField(blank=True, verbose_name='Body')),
                ('meta_title', models.CharField(blank=True, max_length=255, verbose_name='Meta title')),
                ('meta_description', models.TextField(blank=True, verbose_name='Meta description')),
            ],
            options={
                'verbose_name': 'About page',
                'verbose_name_plural': 'About pages',
            },
        ),
        migrations.DeleteModel(
            name='ServicesPage',
        ),
        migrations.AddField(
            model_name='benefitsection',
            name='cta_label',
            field=models.CharField(blank=True, max_length=100, verbose_name='CTA label'),
        ),
        migrations.AddField(
            model_name='benefitsection',
            name='cta_url',
            field=models.URLField(blank=True, verbose_name='CTA URL'),
        ),
        migrations.AlterField(
            model_name='benefitsection',
            name='homepage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='benefit_sections', to='contents.homepage'),
        ),
        migrations.AddField(
            model_name='benefitsection',
            name='aboutpage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='benefit_sections', to='contents.aboutpage'),
        ),
        migrations.AddConstraint(
            model_name='benefitsection',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('homepage__isnull', False), ('aboutpage__isnull', True)), models.Q(('homepage__isnull', True), ('aboutpage__isnull', False)), _connector='OR'), name='benefitsection_exactly_one_parent'),
        ),
    ]
