# Generated by Django 5.2.1 on 2025-09-01 04:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contents', '0024_remove_benefitsection_benefitsection_exactly_one_parent_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServicePage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('title_kk', models.CharField(max_length=200, null=True, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=200, null=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=200, null=True, verbose_name='Title')),
                ('subtitle', models.TextField(blank=True, verbose_name='Subtitle')),
                ('subtitle_kk', models.TextField(blank=True, null=True, verbose_name='Subtitle')),
                ('subtitle_ru', models.TextField(blank=True, null=True, verbose_name='Subtitle')),
                ('subtitle_en', models.TextField(blank=True, null=True, verbose_name='Subtitle')),
                ('cta_title', models.CharField(blank=True, max_length=200, verbose_name='CTA title')),
                ('cta_title_kk', models.CharField(blank=True, max_length=200, null=True, verbose_name='CTA title')),
                ('cta_title_ru', models.CharField(blank=True, max_length=200, null=True, verbose_name='CTA title')),
                ('cta_title_en', models.CharField(blank=True, max_length=200, null=True, verbose_name='CTA title')),
                ('cta_subtitle', models.TextField(blank=True, verbose_name='CTA subtitle')),
                ('cta_subtitle_kk', models.TextField(blank=True, null=True, verbose_name='CTA subtitle')),
                ('cta_subtitle_ru', models.TextField(blank=True, null=True, verbose_name='CTA subtitle')),
                ('cta_subtitle_en', models.TextField(blank=True, null=True, verbose_name='CTA subtitle')),
                ('cta_button_label', models.CharField(blank=True, max_length=120, verbose_name='CTA button label')),
                ('cta_button_label_kk', models.CharField(blank=True, max_length=120, null=True, verbose_name='CTA button label')),
                ('cta_button_label_ru', models.CharField(blank=True, max_length=120, null=True, verbose_name='CTA button label')),
                ('cta_button_label_en', models.CharField(blank=True, max_length=120, null=True, verbose_name='CTA button label')),
                ('cta_button_url', models.URLField(blank=True, verbose_name='CTA button URL')),
                ('meta_title', models.CharField(blank=True, max_length=255, verbose_name='Meta title')),
                ('meta_title_kk', models.CharField(blank=True, max_length=255, null=True, verbose_name='Meta title')),
                ('meta_title_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='Meta title')),
                ('meta_title_en', models.CharField(blank=True, max_length=255, null=True, verbose_name='Meta title')),
                ('meta_description', models.TextField(blank=True, verbose_name='Meta description')),
                ('meta_description_kk', models.TextField(blank=True, null=True, verbose_name='Meta description')),
                ('meta_description_ru', models.TextField(blank=True, null=True, verbose_name='Meta description')),
                ('meta_description_en', models.TextField(blank=True, null=True, verbose_name='Meta description')),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Service page',
                'verbose_name_plural': 'Service pages',
            },
        ),
        migrations.CreateModel(
            name='ServiceButton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=120, verbose_name='Label')),
                ('label_kk', models.CharField(max_length=120, null=True, verbose_name='Label')),
                ('label_ru', models.CharField(max_length=120, null=True, verbose_name='Label')),
                ('label_en', models.CharField(max_length=120, null=True, verbose_name='Label')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('order', models.PositiveIntegerField(default=0)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buttons', to='contents.servicepage')),
            ],
            options={
                'verbose_name': 'Service button',
                'verbose_name_plural': 'Service buttons',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceBenefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=160, verbose_name='Name')),
                ('name_kk', models.CharField(max_length=160, null=True, verbose_name='Name')),
                ('name_ru', models.CharField(max_length=160, null=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=160, null=True, verbose_name='Name')),
                ('value', models.CharField(max_length=160, verbose_name='Value')),
                ('value_kk', models.CharField(max_length=160, null=True, verbose_name='Value')),
                ('value_ru', models.CharField(max_length=160, null=True, verbose_name='Value')),
                ('value_en', models.CharField(max_length=160, null=True, verbose_name='Value')),
                ('order', models.PositiveIntegerField(default=0)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benefits', to='contents.servicepage')),
            ],
            options={
                'verbose_name': 'Service benefit',
                'verbose_name_plural': 'Service benefits',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceAdvantage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon_svg', models.TextField(blank=True, verbose_name='Inline SVG')),
                ('text', models.TextField(blank=True, verbose_name='Text')),
                ('text_kk', models.TextField(blank=True, null=True, verbose_name='Text')),
                ('text_ru', models.TextField(blank=True, null=True, verbose_name='Text')),
                ('text_en', models.TextField(blank=True, null=True, verbose_name='Text')),
                ('order', models.PositiveIntegerField(default=0)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advantages', to='contents.servicepage')),
            ],
            options={
                'verbose_name': 'Service advantage',
                'verbose_name_plural': 'Service advantages',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceProgramItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anchor', models.SlugField(blank=True, help_text='Если пусто — сгенерируется автоматически вида program-<id>', max_length=64, verbose_name='Anchor (ID)')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('title_kk', models.CharField(max_length=200, null=True, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=200, null=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=200, null=True, verbose_name='Title')),
                ('time', models.CharField(blank=True, max_length=120, verbose_name='Duration / time')),
                ('subtitle', models.CharField(blank=True, max_length=300, verbose_name='Subtitle')),
                ('subtitle_kk', models.CharField(blank=True, max_length=300, null=True, verbose_name='Subtitle')),
                ('subtitle_ru', models.CharField(blank=True, max_length=300, null=True, verbose_name='Subtitle')),
                ('subtitle_en', models.CharField(blank=True, max_length=300, null=True, verbose_name='Subtitle')),
                ('list_text', models.TextField(blank=True, help_text='Каждый пункт с новой строки.', verbose_name='Bullets (one per line)')),
                ('list_text_kk', models.TextField(blank=True, help_text='Каждый пункт с новой строки.', null=True, verbose_name='Bullets (one per line)')),
                ('list_text_ru', models.TextField(blank=True, help_text='Каждый пункт с новой строки.', null=True, verbose_name='Bullets (one per line)')),
                ('list_text_en', models.TextField(blank=True, help_text='Каждый пункт с новой строки.', null=True, verbose_name='Bullets (one per line)')),
                ('order', models.PositiveIntegerField(default=0)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='program_items', to='contents.servicepage')),
            ],
            options={
                'verbose_name': 'Program item',
                'verbose_name_plural': 'Program items',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceProgramImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='services/program/', verbose_name='Image')),
                ('alt', models.CharField(blank=True, max_length=200, verbose_name='Alt text')),
                ('order', models.PositiveIntegerField(default=0)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='contents.serviceprogramitem')),
            ],
            options={
                'verbose_name': 'Program image',
                'verbose_name_plural': 'Program images',
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='ServiceSlide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='services/slides/', verbose_name='Image')),
                ('alt', models.CharField(blank=True, max_length=200, verbose_name='Alt text')),
                ('order', models.PositiveIntegerField(default=0)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slides', to='contents.servicepage')),
            ],
            options={
                'verbose_name': 'Service slide',
                'verbose_name_plural': 'Service slides',
                'ordering': ['order', 'id'],
            },
        ),
    ]
